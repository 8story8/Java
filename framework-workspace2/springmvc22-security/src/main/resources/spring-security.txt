**Spring Security**
Spring Security : 인증(authentication) : 현재 사용자가 누군지 확인 (일반적으로 로그인)
					및   
					인가(authorization) : 현재 사용자가 특정 대상(URL,기능)을 사용할 권한이 있는지 검사
					및 
					그에 따른 UI 처리, 비밀번호 암호화, 중복로그인 방지 등에 대한 
					기본 구조 및 다양한 컴포넌트를  제공한다 
					


0. DB 구축:  권한테이블정의 - src/test/resources/security.sql
			   authorities		

1. Spring Security 관련 의존 라이브러리 추가  
maven pom.xml 
1)spring security 관련 의존라이브러리 추가 
<!-- Spring security -->
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>3.2.5.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>3.2.5.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>3.2.5.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-taglibs</artifactId>
		<version>3.2.5.RELEASE</version>
	</dependency> 
    <dependency>
    	<groupId>cglib</groupId>
	<artifactId>cglib</artifactId>
	<version>2.2</version>
    </dependency>
2. web.xml 에 Spring Security 관련 설정파일 로딩 ( spring-security.xml )
<servlet>  
    <servlet-name>appServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring-*.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
3. web.xml 에 Spring Security Security Filter 등록 
  <!-- Spring Security -->
   <filter>
    	<description>Spring Security Security Filter</description>
    	<filter-name>springSecurityFilterChain</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>    
    <filter-mapping>
    	<filter-name>springSecurityFilterChain</filter-name>
    	<url-pattern>*.do</url-pattern>   	
    </filter-mapping>
    <!-- 인증 관련 error 일 경우 다음 페이지를 보여준다 -->
    <error-page>
    	<error-code>403</error-code>
    	<location>/WEB-INF/views/auth_error.jsp</location>
    </error-page>

4. 인증 담당  클래스 정의 (implements AuthenticationProvider) 
   org.kosta.springmvc23.security.MemberAuthenticationProvider
   인증 정보 저장 클래스 정의 
   org.kosta.springmvc23.model.Authority
   
5. Spring Security 설정파일작성 
   spring-security.xml
  
6. 컨트롤러에서 인증 및 인가 처리작업을 수행한다. 
   org.kosta.springmvc23.controller.MemberController
      
7. View 계층에 Spring Security 처리 
   views/templates/left.jsp 
   views/templates/updateForm.jsp 를 확인한다 












 				








 				









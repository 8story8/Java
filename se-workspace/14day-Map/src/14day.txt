**14일차 주요 목차**
- Review
  Collection 인터페이스 : Collection 계열의 최상위 인터페이스
  Set : Collection 인터페이스의 하위 인터페이스이고 중복을 허용하지 않는다.
  		 class : TreeSet(정렬), LinkedHashSet(순서)
  List : Collection 인터페이스의 하위 인터페이스이고 순번으로 관리된다.
  		 class : ArrayList(검색), LinkedList(삽입, 삭제)
  		 
- Iterator
  사전적 의미는 반복자
  즉, Collection 내의 요소를 반복해서 열거하기 위한 표준을 제공
  hasNext() : boolean 다음 요소가 있으면 true, 없으면 false
  next() : 다음 요소를 반환
  
- java.util.Map
  key, value 쌍으로 저장
  key를 통한 검색, 수정, 삭제에 장점
  -> key는 유일해야 한다.

- Stack : Last In First Out

- Queue : First In First Out

**15일차 주요 목차**
- String과 StringBuilder(or StringBuffer)
  String : 문자열 상수 영역(Literal Pool)에 저장
            동일한 문자열은 중복해서 생성하지 않고
            동시 참조하여 메모리를 효율적으로 사용한다.
            불변 : 문자열 자체는 변경되지 않고 새롭게 생성된다.
            이유 : 동시 참조
  StringBuilder(or StringBuffer)
  가변 : 문자열 변경시 자체가 변경된다.
  문자열이 자주 변경되는 경우에 사용하는 것이 효율적이다.
  StringBuffer, StringBuilder의 차이
  동기화 처리   비동기화 처리
  
- Exception Handling
  : 프로그램 실행시 발생할 수 있는 예외에 대한 처리
    -> JVM은 실행시 Error or Exception이 발생하면 즉시 종료된다.(비정상 종료)
    Exception Handling이란 예외 발생시 대처 방안을 실행하고,
    프로그램을 정상적으로 실행하는 것을 말한다.
  try : Exception 발생 예상 지점 블럭화할 때 사용
  catch : Exception 처리, 대처 방안
  finally : Exception 발생유무에 관계없이 항상 실행
  throws : 호출한 곳으로 Exception을 던진다.
  throw : Exception을 발생시킨다.

--복습 포인트--
- abstract와 interface 공통점, 차이점
  공통점 : 추상 메서드를 통해 하위 클레스에게 메서드 구현 강제 -> 표준화에 기여
             직접 객체화될 수 없다.
  차이점 : abstact는 단일 상속, 멤버를 자식에게 물려줄 수 있다.
             interface는 다중 상속(구현)을 통해 다양한 계층 구조 형성
                            그것을 바탕으로 다형성 구현
                            
- Iterator 사례를 기반하여 Interface를 설명
  Iterator는 Collection 내의 요소를 반복해서 열거하기 위한 인터페이스로 이에 대한 표준을 제공
  Iterator의 추상 메서드는 Collection > Set, List 등에서 Overriding되어,
  Iterator 하나로 Collection > Set, List 등에 접근 가능
  Collection은 Iterable 인터페이스를 상속
  Iterable 인터페이스 내에 Iterator 메서드가 존재
  다양한 계층 구조 형성
  즉, 하나의 Java API로 다양한 객체들이 각자의 방식으로 동작할 수 있는 성질인 다형성을 구현
  
- Set, List, Map 특징
  Set : Collection 인터페이스의 하위 인터페이스로 중복을 허용하지 않는다.
  ex) TreeSet(정렬), LinkedHashSet(순서)
  List : Collection 인터페이스의 하위 인터페이스로 중복을 허용
  ex) ArrayList(검색), LinkedList(삽입, 삭제) 
  Map : key, value 쌍으로 저장 
          key를 통한 검색, 수정 삭제 용이
          key는 유일해야 한다.
          
- Stack, Queue 특징
  Stack : Last In First Out
  Queue : First In First Out
       
**10일차 주요 목차**
- Review
Java 소개, 특징 - Platform Independent, Object-Oriented Language
: JVM(Java Virtual Machine)이 통역자 역할 "Write Once, Run Anywhere"

Object-Oriented
: 분석 설계 기법, 객체를 기본 단위로 객체간의 관계를 중심으로 시스템을 분석 설계하는 기법

Object
: System의 기본 단위, 속성과 기능으로 구성

Object와 Class의 관계
: Class는 Object의 설계도이다, 붕어빵(Object) 붕어빵틀(Class)

Object Structure
: 속성(Attribute, Variable)
  기능(Operation, Method)
  
Java의 Data Type - Primitive Data Type,     Reference Data Type
						  정수, 실수, 문자, 논리형  객체의 타입
						  
Access Modifier 종류와 특성 - public > protected > default > private

Constructor 역할
: 객체 초기화 작업 수행
  ex) 신용 카드 발급시 신용 정보
  
Overloading vs Overriding
: 다양한 Parameter vs 부모 메서드 재정의

Encapsulation 정의와 장점
: "public interface, private implementation"
  (생산성 측면, 유지보수성 측면)
  
Inheritance 정의와 특성
: 부모 멤버를 물려받는다.
  계층 구조를 형성한다. -> 다형성 적용 환경

this Keyword vs super Keyword
: 현재 객체를 가르키는 키워드 vs 부모 객체를 가르키는 키워드

Polymorphism 정의
: "One Interface, Multiple Implements"
  하나의 메세지 방식으로 다양한 객체들이 각자의 방식으로 동작하는 성질

Object Casting(Object Down Casting)
: 객체의 형변환
  부모 타입의 변수로 자식 객체가 참조되었을 때
  부모의 상속받은 멤버와 오버라이딩한 메서드에는 바로 접근 가능하나,
  자식 객체의 독자적인 멤버에 접근하기 위해서는
  Object Down Casting이 필요

instanceof 연산자
: 객체 타입을 비교하는 연산자
  is a 관계일때 true를 반환한다.

java.lang.Object
: 모든 클래스의 최상위 클래스
  모든 객체의 부모 객체

java.lang.Object의 toString() Overriding
: Object의 toString() 메서드는 객체의 주소값을 반환하는 역할
  주소값 대신 실제 객체의 속성 정보를 반환하도록 오버라이딩하여 사용한다.
  ex) Person p = new Person();
       System.out.println(p);와 System.out.println(p.toString());은 결과적으로 동일하다.
       Person 클래스에서 toString()을 오버라이딩하면 주소값 대신 실제 정보가 반환되어 출력될 수 있다.
 


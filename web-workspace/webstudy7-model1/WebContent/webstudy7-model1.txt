**model1 Architecture**
기존 구조
html <---> Servlet(or JSP) <---> DB

Model 1
html <---> Servlet(or JSP) <---> Java Beans(Java Object, Component) <---> DB

Java Beans가 Business Logic을 담당하여,
재사용성과 유지보수성을 높이는 구조로 변경해본다.
ex) DAO

**Singleton Design Pattern**
System상에서 단 하나의 Object만 생성하여 공유해서 사용하고자 할 때 적용하는 Design Pattern
적용 방법 : 생성자에 private 접근 제어자를 명시하여 외부에서 객체 생성을 할 수 없도록 처리한다.
			   static 변수는 Class Loading시에 단 한 번 적재되므로 그 속성을 이용해 자신의 Class에서 자신의 객체를 만든 후,
			   static 변수에 Reference를 저장한다.
			   외부에 공유는 static 메서드로 한 번 생성한 Object의 Reference를 반환하는 구조로 처리
ex) 현재 MemberDAO 객체는 하나만 존재하면,
     각 Servlet에서는 공유해서 사용하면 된다.
     즉, 불필요하게 사용할 때마다 매번 MemberDAO 객체를 만들 필요가 없다는 의미이다.
     
**주요 Keyword**
ServletConfig, ServletContext 특징
ServletContextListener 특징
Model1 설계 방식을 적용했을 때의 장점
